---
alertmanager:
  ingress:
    enabled: true
    paths: ["/"]
    hosts:
      - alertmanager.${external_dns_ingress_dns}

prometheus:
  ingress:
    enabled: true
    paths: ["/"]
    hosts:
      - prometheus.${external_dns_ingress_dns}
  additionalServiceMonitors:
    - name: istio
      selector: {}
      matchExpressions:
        - {key: istio, operator: In, values: [pilot, mixer]}
      namespaceSelector:
        matchNames:
          - monitoring
      jobLabel: istio
      endpoints:
        - port: prometheus
          interval: 5s
        - port: http-monitoring
          interval: 5s
        - port: statsd-prom
          interval: 5s
  prometheusSpec:
    externalUrl: ""
    routePrefix: /
    retention: 30d
    retentionSize: 75GB
    secrets: ${istio_secret}
    additionalScrapeConfigs:
      - job_name: 'envoy-stats'
        metrics_path: /stats/prometheus
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: '.*-envoy-prom'
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:15090
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod_name
    ruleNamespaceSelector: {}
    serviceMonitorSelector:
      matchLabels:
        prometheus: default
    ruleSelector:
      matchLabels:
        alertmanager: default
 
grafana:
  ingress:
    enabled: true
    path: "/"
    hosts:
      - grafana.${external_dns_ingress_dns}