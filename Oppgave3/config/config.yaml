---
alertmanager:
  ingress:
    enabled: true
    paths: ["/"]
    hosts:
      - alertmanager.${external_dns_ingress_dns}
  config:
    global:
      resolve_timeout: 5m
      slack_api_url: 'https://hooks.slack.com/services/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'
    route:
      group_by: ['job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack-notifications'
    receivers:
    - name: 'slack-notifications'
      slack_configs:
      - channel: '#devops-training-team1'
        send_resolved: true

prometheus:
  ingress:
    enabled: true
    paths: ["/"]
    hosts:
      - prometheus.${external_dns_ingress_dns}
  additionalServiceMonitors:
    - name: istio
      selector: {}
      matchExpressions:
        - {key: istio, operator: In, values: [pilot, mixer]}
      namespaceSelector:
        matchNames:
          - monitoring
      jobLabel: istio
      endpoints:
        - port: prometheus
          interval: 5s
        - port: http-monitoring
          interval: 5s
        - port: statsd-prom
          interval: 5s
  prometheusSpec:
    externalUrl: ""
    routePrefix: /
    retention: 30d
    additionalScrapeConfigs:
      - job_name: 'envoy-stats'
        metrics_path: /stats/prometheus
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: '.*-envoy-prom'
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:15090
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod_name
    ruleNamespaceSelector: {}
    serviceMonitorSelector:
      matchLabels:
        prometheus: default
    ruleSelector:
      matchLabels:
        alertmanager: default
 
grafana:
  ingress:
    enabled: true
    path: "/"
    hosts:
      - grafana.${external_dns_ingress_dns}